# !/user/bin/bash

w=7
nm=2
f=test-data

#from
fromr=""
function from {
l=$(ls ./data)
from=0
echo select the table 
select fr in $l
do 
if [[ $fr == "" ]]
then 
echo enter valid number
else
from=$fr
break
fi
done
fromr=$from 
}
#from end





#where
wherer=0
function where {
meta=$(awk ' BEGIN{FS=","} {  
  for(i = 1; i<=NF ; i++)
    {
    print $i
    }
    } END{} ' ./meta/$fromr.meta)
wtype=-1
wno=-1
echo select the condition column
select wh in $meta
do
if [[ $wh == "" ]]
then 
echo enter valid number
else
wtype=$wh
wno=$REPLY
break
fi
done

if [[ $(echo $wtype |cut -d ":" -f 2) == "int" ]]
then 

echo select the condition op
select op in "==" "<=" ">=" "<" ">"
do
if [[ $op == "" ]]
then 
echo enter valid number
else
read -p "Please Enter condition value: " condval
if [[ $condval =~ ^[1-9]+$ ]]
then 
condition_row=$(awk ' BEGIN{FS=":"} { 
if ( $'$wno' '$op' '$condval' ){
print NR
}
} END{ } ' ./data/$fromr )
break
else echo not a number
fi
fi
done
else 
read -p "Please Enter condition value: " condval
condition_row=$(
awk -v condv="$condval" ' BEGIN{FS=":"} { 
if ( $'$wno' == condv){
print NR
}
} END{ } ' ./data/$fromr
)
fi
wherer=$condition_row
}





#delete part
<< comment
from
where
echo this is the result of where : $wherer
wherer=($wherer)
del=""
for i in "${wherer[@]}"
do
del+=$i"d;"
done
sed -i "$del" ./data/$fromr
comment












function selwhere {
meta=$(awk ' BEGIN{FS=","} {  
  for(i = 1; i<=NF ; i++)
    {
    print $i
    }
    } END{} ' ./meta/$fromr.meta)
wtype=-1
wno=-1
echo select the condition column
select wh in $meta
do
if [[ $wh == "" ]]
then 
echo enter valid number
else
wtype=$wh
wno=$REPLY
break
fi
done

# metaar=($meta)
# echo ${#metaar[@]}
declare -i swno=-1
echo select the selected column
select wh in all $meta
do
if [[ $wh == "" ]]
then 
echo enter valid number
else
swno=$REPLY-1
break
fi
done


if [[ $(echo $wtype |cut -d ":" -f 2) == "int" ]]
then 
echo select the condition op
select op in "==" "<=" ">=" "<" ">"
do
if [[ $op == "" ]]
then 
echo enter valid number
else
read -p "Please Enter condition value: " condval
if [[ $condval =~ ^[1-9]+$ ]]
then 
awk ' BEGIN{FS=":"} { 
if ( $'$wno' '$op' '$condval' ){
print $'$swno'
}
} END{ } ' ./data/$fromr 
break
else echo not a number
fi
fi
done
else 
read -p "Please Enter condition value: " condval
awk -v condv="$condval" ' BEGIN{FS=":"} { 
if ( $'$wno' == condv){
print $'$swno'
}
} END{ } ' ./data/$fromr
fi
}





# from 
# selwhere













function updwhere {
meta=$(awk ' BEGIN{FS=","} {  
  for(i = 1; i<=NF ; i++)
    {
    print $i
    }
    } END{} ' ./meta/$fromr.meta)
wtype=-1
wno=-1
upv=-1
# metaar=($meta)
# echo ${#metaar[@]}
declare -i uwno=-1
echo select the column to update
select wh in $meta
do
if [[ $wh == "" ]]
then 
echo enter valid number
else
read -p "Please Enter updated value: " upvv
upv=$upvv
if [[ $REPLY == 1 ]] && [[ $upv == "" ]] ;then
echo primary key cant be empty
else 
if [[ $(echo $wh |cut -d ":" -f 2) == "int" ]]
then
if [[ ! $upv =~ ^[1-9]+$ ]]
then
echo this column takes int
else
uwno=$REPLY
break
fi
else
uwno=$REPLY
break
fi
fi
fi
done




echo select the condition column
select wh in $meta
do
if [[ $wh == "" ]]
then 
echo enter valid number
else
wtype=$wh
wno=$REPLY
break
fi
done


if [[ $(echo $wtype |cut -d ":" -f 2) == "int" ]]
then 
echo select the condition op
select op in "==" "<=" ">=" "<" ">"
do
if [[ $op == "" ]]
then 
echo enter valid number
else
if [[ $REPLY != 1 ]] && [[ $uwno == 1 ]] ;then
echo primary key must be unique
break
fi
read -p "Please Enter condition value: " condval
if [[ $condval =~ ^[1-9]+$ ]]
then 
awk -v upval=$upv ' BEGIN{FS=":"} { 
if ( $'$wno' '$op' '$condval' ){
    $'$uwno' = upval
}
print
} END{ } '  OFS=: ./data/$fromr > temp && mv temp ./data/$fromr 
break
else echo not a number
fi
fi
done
else 
read -p "Please Enter condition value: " condval
awk -v condv="$condval" -v upval=$upv ' BEGIN{FS=":"} { 
if ( $'$wno' == condv){
    $'$uwno' = upval
}
print
} END{ } '  OFS=: ./data/$fromr > temp && mv temp ./data/$fromr 
fi
}








from 
updwhere









<< comment 
from
awk ' BEGIN{FS=":"} { 
if ( $2 == "john_doe"){
$2 = "woooooooooooow"
}
print
}END{ } ' OFS=: ./data/$fromr > temp && mv temp ./data/$fromr 
comment






















<<comment





# op='<='
# if (( 4 $op 5 )) 
# then  echo working
# fi






awk '
BEGIN{ FS =":"}
{
if($1 == '$w'){
print $0 
}
}
END{}' ./$f



comment
